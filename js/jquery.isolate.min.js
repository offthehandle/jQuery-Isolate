/*
 * Isolate Plugin for jQuery JavaScript Library
 * 
 * Copyright (c) 2014-2017 Adam J De Lucia
 * Licensed under the MIT License.
 * http://opensource.org/licenses/MIT
 * 
 * Author: Adam J De Lucia
 * Version: 1.7.0
 * Date: November 19, 2017
 * 
 */
(function (n) { n.fn.isolate = function (t) { this.each(function () { function b() { var t = {}; return i.filters.find(i.filterClass).each(function () { l = n(this).attr("id"); t[l] = "isInactive" }), t } var i = n.extend({ isolate: !0, filters: n("#iso-filters"), filteredList: n("#isos"), filterClass: ".filter", iso: "li", isoGrid: !1, bootstrap: !0, version: 3, breakpoint: "md", bsSpan: 3, columns: 4, setup: null, start: null, complete: null }, t), h = "#" + n(this).attr("id"), c = b(), l = null, r = null, o = null, s = null, u = [], f = [], y = i.version.toString(), a = Number(y.substring(0, 1)), p = function () { var t, f, e, l; r = n(this).attr("id"); s = "." + r; o = "#" + r; t = c; n.isFunction(i.start) && i.start.call(this, t, r); n(h).trigger("isolate.filter.start", [this, t, r]); i.filteredList.find(i.iso).show(); for (f in t) if (f === r && t[f] === "isInactive") { u.push(s); i.filteredList.find(n(i.iso).not(u.toString())).hide(); t[f] = "isActive"; i.filters.find(o).addClass("active"); break } else if (f === r && t[f] === "isActive") { for (e = 0, l = u.length; e < l; e++) if (u[e] === s) { u.splice(e, 1); break } u.length && i.filteredList.find(n(i.iso).not(u.toString())).hide(); t[f] = "isInactive"; i.filters.find(o).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this, t, r, u); n(h).trigger("isolate.filter.complete", [this, t, r, u]) }, w = function () { var t, u, e, l; r = n(this).attr("id"); s = "." + r; o = "#" + r; t = c; n.isFunction(i.start) && i.start.call(this, t, r); n(h).trigger("isolate.filter.start", [this, t, r]); i.filteredList.find(i.iso).show(); for (u in t) if (u === r && t[u] === "isInactive") { f.push(s); i.filteredList.find(f.toString()).hide(); t[u] = "isActive"; i.filters.find(o).addClass("active"); break } else if (u === r && t[u] === "isActive") { for (e = 0, l = f.length; e < l; e++) if (f[e] === s) { f.splice(e, 1); break } f.length && i.filteredList.find(f.toString()).hide(); t[u] = "isInactive"; i.filters.find(o).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this, t, r, f); n(h).trigger("isolate.filter.complete", [this, t, r, f]) }, e, v; if ((i.bootstrap === !0 || i.isoGrid === !0) && (e = "", e = i.bootstrap === !0 ? "col" : "iso", i.breakpoint !== null && n.trim(i.breakpoint) !== "" && (e += "-" + i.breakpoint), i.bootstrap === !0 && i.bsSpan !== null && n.trim(i.bsSpan) !== "" && (e += "-" + i.bsSpan), i.isoGrid === !0 && i.columns !== null && n.trim(i.columns) !== "" && (e += "-" + i.columns), i.filteredList.find(i.iso).addClass(e), v = e.split("-"), a === 3 && (v.length !== 3 && alert("Bootstrap 3 requires both breakpoint and bsSpan options. Please check your configuration."), ["xs", "sm", "md", "lg"].indexOf(i.breakpoint) === -1 && alert("Bootstrap 3 supports breakpoints xs, sm, md and lg. You entered " + i.breakpoint + ".\n\n Please use a supported breakpoint."), isNaN(i.bsSpan) && alert("Bootstrap 3 supports numbers for bsSpan. You entered " + i.bsSpan + ".\n\n Please enter a supported bsSpan as a number or string.")), a === 4 && (i.breakpoint !== null && n.trim(i.breakpoint) !== "" && ["xs", "sm", "md", "lg", "xl"].indexOf(i.breakpoint) === -1 && alert("Bootstrap 4 supports breakpoints xs, sm, md, lg and xl. You entered " + i.breakpoint + ".\n\n Please use a supported breakpoint."), i.bsSpan !== null && n.trim(i.bsSpan) !== "" && (typeof i.bsSpan != "number" && typeof i.bsSpan != "string" && alert("Bootstrap 4 supports only a number or auto for bsSpan. You entered " + i.bsSpan + ".\n\n Please enter a supported bsSpan as a number or string. Also, null or an empty string is valid."), typeof i.bsSpan == "string" && i.bsSpan !== "auto" && isNaN(i.bsSpan) && alert("Bootstrap 4 supports only a number or auto for bsSpan. You entered " + i.bsSpan + ".\n\n Please enter a supported bsSpan as a number or string. Also, null or an empty string is valid.")))), n.isFunction(i.setup) && i.setup.call(this, c), setTimeout(function () { n(h).trigger("isolate.setup", [c]) }, 200), i.isolate === !0) i.filters.on("click.isolate", i.filterClass, p); else i.filters.on("click.isolate", i.filterClass, w) }) } })(jQuery);
//# sourceMappingURL=jquery.isolate.min.js.map
