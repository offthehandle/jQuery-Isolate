/*
 * Isolate Plugin for jQuery JavaScript Library
 * 
 * Copyright (c) 2014-2017 Adam J De Lucia
 * Licensed under the MIT License.
 * http://opensource.org/licenses/MIT
 * 
 * Author: Adam J De Lucia
 * Version: 1.6.0
 * Date: November 14, 2017
 * 
 */
(function (n) { n.fn.isolate = function (t) { this.each(function () { function w() { var t = {}; return i.filters.find(i.filterClass).each(function () { a = n(this).attr("id"); t[a] = "isInactive" }), t } function c() { i.bootstrap === !0 && h === 2 && (i.filteredList.find(i.iso).removeClass(i.bs2row), i.filteredList.find(i.iso).filter(function () { return n(this).css("display") !== "none" }).each(function (t) { i.bsSpan > 6 ? n(this).addClass(i.bs2row) : i.bsSpan === 5 || i.bsSpan === 6 ? t % 2 == 0 && n(this).addClass(i.bs2row) : (t + 1) % (12 / i.bsSpan + 1) == 0 && n(this).addClass(i.bs2row) })) } var i = n.extend({ isolate: !0, filters: n("#iso-filters"), filteredList: n("#isos"), filterClass: ".filter", iso: "li", isoGrid: !1, bootstrap: !0, version: 3, breakpoint: "md", bsSpan: 3, bs2row: "bootstrap-2-row", columns: 4, setup: null, start: null, complete: null }, t), s = "#" + n(this).attr("id"), l = w(), a = null, r = null, e = null, o = null, u = [], f = [], v = i.version.toString(), h = Number(v.substring(0, 1)), y = function () { var t, f, h, a; r = n(this).attr("id"); o = "." + r; e = "#" + r; t = l; n.isFunction(i.start) && i.start.call(this, t, r); n(s).trigger("isolate.filter.start", [this, t, r]); i.filteredList.find(i.iso).show(); for (f in t) if (f === r && t[f] === "isInactive") { u.push(o); i.filteredList.find(n(i.iso).not(u.toString())).hide(); c(); t[f] = "isActive"; i.filters.find(e).addClass("active"); break } else if (f === r && t[f] === "isActive") { for (h = 0, a = u.length; h < a; h++) if (u[h] === o) { u.splice(h, 1); break } u.length && i.filteredList.find(n(i.iso).not(u.toString())).hide(); c(); t[f] = "isInactive"; i.filters.find(e).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this, t, r, u); n(s).trigger("isolate.filter.complete", [this, t, r, u]) }, p = function () { var t, u, h, a; r = n(this).attr("id"); o = "." + r; e = "#" + r; t = l; n.isFunction(i.start) && i.start.call(this, t, r); n(s).trigger("isolate.filter.start", [this, t, r]); i.filteredList.find(i.iso).show(); for (u in t) if (u === r && t[u] === "isInactive") { f.push(o); i.filteredList.find(f.toString()).hide(); c(); t[u] = "isActive"; i.filters.find(e).addClass("active"); break } else if (u === r && t[u] === "isActive") { for (h = 0, a = f.length; h < a; h++) if (f[h] === o) { f.splice(h, 1); break } f.length && i.filteredList.find(f.toString()).hide(); c(); t[u] = "isInactive"; i.filters.find(e).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this, t, r, f); n(s).trigger("isolate.filter.complete", [this, t, r, f]) }; if ((i.bootstrap === !0 || i.isoGrid === !0) && (i.bootstrap === !0 ? h === 4 ? ["xs", "sm", "md", "lg", "xl"].indexOf(i.breakpoint) > -1 || i.breakpoint === null || n.trim(i.breakpoint) === "" ? ["sm", "md", "lg", "xl"].indexOf(i.breakpoint) > -1 ? i.filteredList.find(i.iso).addClass("col-" + i.breakpoint + "-" + i.bsSpan) : i.filteredList.find(i.iso).addClass("col-" + i.bsSpan) : alert("Isolate supports all Bootstrap 4 breakpoints, including xl, lg, md, sm and, for extra small, xs, null or an empty string. You entered " + i.breakpoint + ".\n\n Please use a supported breakpoint.") : h === 3 ? ["xs", "sm", "md", "lg"].indexOf(i.breakpoint) > -1 ? i.filteredList.find(i.iso).addClass("col-" + i.breakpoint + "-" + i.bsSpan) : alert("Isolate supports all Bootstrap 3 breakpoints, including lg, md, sm and xs. You entered " + i.breakpoint + ".\n\n Please use a supported breakpoint.") : h === 2 ? (i.filteredList.find(i.iso).addClass("span" + i.bsSpan), c()) : alert("Isolate supports Bootstrap versions 2 through 4. You entered version " + h + ".\n\n Please use a supported version.") : i.filteredList.find(i.iso).addClass("iso-" + i.breakpoint + "-" + i.columns)), n.isFunction(i.setup) && i.setup.call(this, l), setTimeout(function () { n(s).trigger("isolate.setup", [l]) }, 200), i.isolate === !0) i.filters.on("click.isolate", i.filterClass, y); else i.filters.on("click.isolate", i.filterClass, p) }) } })(jQuery);
//# sourceMappingURL=jquery.isolate.min.js.map
