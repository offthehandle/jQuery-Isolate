/*
 * Isolate Plugin for jQuery JavaScript Library
 * 
 * Copyright (c) 2014-2015 Adam J De Lucia
 * Licensed under the MIT License.
 * http://opensource.org/licenses/MIT
 * 
 * Author: Adam J De Lucia
 * Version: 1.2.2
 * Date: April 22, 2015
 * 
 */
(function (n) { n.fn.isolate = function (t) { this.each(function () { function p() { var t = {}; return i.filtersBox.find(".filter").each(function () { l = n(this).attr("id"); t[l] = "isInactive" }), t } function s() { i.bootstrap === !0 && h === "2" && (i.isosBox.find(i.isoWrapper).removeClass("bs-2-row-start"), i.isosBox.find(i.isoWrapper).filter(function () { return n(this).css("display") != "none" }).each(function (t) { i.colSpan > 6 ? n(this).addClass("bs-2-row-start") : i.colSpan === 5 || i.colSpan === 6 ? t % 2 == 0 && n(this).addClass("bs-2-row-start") : (t + 1) % (12 / i.colSpan + 1) == 0 && n(this).addClass("bs-2-row-start") })) } var i = n.extend({ filtersBox: n("#iso-filters"), isosBox: n("#iso-els"), isoWrapper: "li", filter: !1, bootstrap: !0, version: 3, breakpoint: "md", colSpan: 3, setup: null, start: null, complete: null, columns: !1 }, t), a = i.version.toString(), h = a.substring(0, 1), c = p(), v = function () { var f, t, h, l; r = n(this).attr("id"); o = "." + r; e = "#" + r; f = c; n.isFunction(i.start) && i.start.call(this); i.isosBox.find(i.isoWrapper).show(); for (t in f) if (t === r && f[t] === "isInactive") { u.push(o); i.isosBox.find(n(i.isoWrapper).not(u.toString())).hide(); s(); f[t] = "isActive"; i.filtersBox.find(e).addClass("active"); break } else if (t === r && f[t] === "isActive") { for (h = 0, l = u.length; h < l; h++) if (u[h] === o) { u.splice(h, 1); break } u.length && i.isosBox.find(n(i.isoWrapper).not(u.toString())).hide(); s(); f[t] = "isInactive"; i.filtersBox.find(e).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this) }, y = function () { var u, t, h, l; r = n(this).attr("id"); o = "." + r; e = "#" + r; u = c; n.isFunction(i.start) && i.start.call(this); i.isosBox.find(i.isoWrapper).show(); for (t in u) if (t === r && u[t] === "isInactive") { f.push(o); i.isosBox.find(f.toString()).hide(); s(); u[t] = "isActive"; i.filtersBox.find(e).addClass("active"); break } else if (t === r && u[t] === "isActive") { for (h = 0, l = f.length; h < l; h++) if (f[h] === o) { f.splice(h, 1); break } f.length && i.isosBox.find(f.toString()).hide(); s(); u[t] = "isInactive"; i.filtersBox.find(e).removeClass("active"); break } n.isFunction(i.complete) && i.complete.call(this) }; if ((i.bootstrap === !0 || i.columns === !0) && (i.bootstrap === !0 ? h === "3" ? i.isosBox.find(i.isoWrapper).addClass("col-" + i.breakpoint + "-" + i.colSpan) : h === "2" ? (i.isosBox.find(i.isoWrapper).addClass("span" + i.colSpan), s()) : alert("Isolate supports Bootstrap versions 2 and 3. You entered version " + h + ".\n\n Please use a supported version.") : i.isosBox.find(i.isoWrapper).addClass("iso-col-" + i.colSpan)), n.isFunction(i.setup) && i.setup.call(this), i.filter === !0) i.filtersBox.on("click.isolate", ".filter", y); else i.filtersBox.on("click.isolate", ".filter", v); var l = "", r = "", e = "", o = "", u = [], f = [] }) } })(jQuery);
/*
//# sourceMappingURL=jquery.isolate.min.js.map
*/