/*
 * Isolate Plugin for jQuery JavaScript Library
 * 
 * Copyright (c) 2014 Adam J De Lucia
 * Licensed under the MIT License.
 * http://opensource.org/licenses/MIT
 * 
 * Author: Adam J De Lucia
 * Version: 1.2.0
 * Date: November 28, 2014
 * 
 */
$.fn.isolate = function (n) { this.each(function () { function y() { var n = {}; return t.filtersBox.find(".filter").each(function () { c = $(this).attr("id"); n[c] = "isInactive" }), n } function o() { t.bootstrap === !0 && s === "2" && (t.isosBox.find(t.isoWrapper).removeClass("bs-2-row-start"), t.isosBox.find(t.isoWrapper).filter(function () { return $(this).css("display") != "none" }).each(function (n) { t.colSpan > 6 ? $(this).addClass("bs-2-row-start") : t.colSpan === 5 || t.colSpan === 6 ? n % 2 == 0 && $(this).addClass("bs-2-row-start") : (n + 1) % (12 / t.colSpan + 1) == 0 && $(this).addClass("bs-2-row-start") })) } var t = $.extend({ filtersBox: $("#iso-filters"), isosBox: $("#iso-els"), isoWrapper: "li", filter: !1, bootstrap: !0, version: 3, breakpoint: "md", colSpan: 3, setup: null, start: null, complete: null, columns: !1 }, n), l = t.version.toString(), s = l.substring(0, 1), h = y(), a = function () { var u, n, s, c; i = $(this).attr("id"); e = "." + i; f = "#" + i; u = h; $.isFunction(t.start) && t.start.call(this); t.isosBox.find(t.isoWrapper).show(); for (n in u) if (n === i && u[n] === "isInactive") { r.push(e); t.isosBox.find($(t.isoWrapper).not(r.toString())).hide(); o(); u[n] = "isActive"; t.filtersBox.find(f).addClass("active"); break } else if (n === i && u[n] === "isActive") { for (s = 0, c = r.length; s < c; s++) if (r[s] === e) { r.splice(s, 1); break } r.length && t.isosBox.find($(t.isoWrapper).not(r.toString())).hide(); o(); u[n] = "isInactive"; t.filtersBox.find(f).removeClass("active"); break } $.isFunction(t.complete) && t.complete.call(this) }, v = function () { var r, n, s, c; i = $(this).attr("id"); e = "." + i; f = "#" + i; r = h; $.isFunction(t.start) && t.start.call(this); t.isosBox.find(t.isoWrapper).show(); for (n in r) if (n === i && r[n] === "isInactive") { u.push(e); t.isosBox.find(u.toString()).hide(); o(); r[n] = "isActive"; t.filtersBox.find(f).addClass("active"); break } else if (n === i && r[n] === "isActive") { for (s = 0, c = u.length; s < c; s++) if (u[s] === e) { u.splice(s, 1); break } u.length && t.isosBox.find(u.toString()).hide(); o(); r[n] = "isInactive"; t.filtersBox.find(f).removeClass("active"); break } $.isFunction(t.complete) && t.complete.call(this) }; if ((t.bootstrap === !0 || t.columns === !0) && (t.bootstrap === !0 ? s === "3" ? t.isosBox.find(t.isoWrapper).addClass("col-" + t.breakpoint + "-" + t.colSpan) : s === "2" ? (t.isosBox.find(t.isoWrapper).addClass("span" + t.colSpan), o()) : alert("Isolate supports Bootstrap versions 2 and 3. You entered version " + s + ".\n\n Please use a supported version.") : t.isosBox.find(t.isoWrapper).addClass("iso-col-" + t.colSpan)), $.isFunction(t.setup) && t.setup.call(this), t.filter === !0) t.filtersBox.on("click.isolate", ".filter", v); else t.filtersBox.on("click.isolate", ".filter", a); var c = "", i = "", f = "", e = "", r = [], u = [] }) };
/*
//# sourceMappingURL=jquery.isolate.min.js.map
*/